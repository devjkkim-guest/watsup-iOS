version: '3'

volumes:
  api_data: {}

services:
  mysql:
    image: mysql:8.0.21
    environment:
      MYSQL_DATABASE: app
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpass
    healthcheck:
      test: ['CMD', 'mysqladmin' ,'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10
    command: --default-authentication-plugin=mysql_native_password
    volumes:
    - api_data:/var/lib/mysql
    ports:
    - 3306:3306

  redis:
    image: redis
    volumes:
    - /etc/localtime:/etc/localtime:ro
    command: redis-server --appendonly yes --requirepass redis-password
    ports:
    - 6379:6379

  minio:
    image: minio/minio:RELEASE.2021-01-16T02-19-44Z
    volumes:
    - ./.minio-data:/data
    ports:
    - 9000:9000
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

  prod: &base
    image: ashon/watsup-api:latest
    build:
      context: .
      dockerfile: ./Dockerfile
    command: /tools/wait-for-it.sh mysql:3306 -t 30 -- uwsgi -i uwsgi.ini
    environment:
      DEBUG: 'True'
      DB_URI: mysql://root:rootpass@mysql:3306/app

      MINIO_HOST: minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_SECURE: 'False'
      MINIO_BUCKET_NAME: 'images'

      MAIL_USERNAME: $MAIL_USERNAME
      MAIL_PASSWORD: $MAIL_PASSWORD
    ports:
    - 8000:8000

  # develop api
  devel:
    <<: *base
    image: ashon/watsup-api:latest-ci
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    links:
    - mysql:mysql
    - minio:minio
    volumes:
    - ./:/opt/api
    command: /tools/wait-for-it.sh mysql:3306 -t 30 -- ./src/manage.py runserver -h 0 -p 8000
