/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/Constraint.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |public final class Constraint {
   31|       |
   32|       |    internal let sourceLocation: (String, UInt)
   33|       |    internal let label: String?
   34|       |
   35|       |    private let from: ConstraintItem
   36|       |    private let to: ConstraintItem
   37|       |    private let relation: ConstraintRelation
   38|       |    private let multiplier: ConstraintMultiplierTarget
   39|       |    private var constant: ConstraintConstantTarget {
   40|      0|        didSet {
   41|      0|            self.updateConstantAndPriorityIfNeeded()
   42|      0|        }
   43|       |    }
   44|       |    private var priority: ConstraintPriorityTarget {
   45|      0|        didSet {
   46|      0|          self.updateConstantAndPriorityIfNeeded()
   47|      0|        }
   48|       |    }
   49|       |    public var layoutConstraints: [LayoutConstraint]
   50|       |    
   51|       |    public var isActive: Bool {
   52|      0|        set {
   53|      0|            if newValue {
   54|      0|                activate()
   55|      0|            }
   56|      0|            else {
   57|      0|                deactivate()
   58|      0|            }
   59|      0|        }
   60|       |        
   61|      0|        get {
   62|      0|            for layoutConstraint in self.layoutConstraints {
   63|      0|                if layoutConstraint.isActive {
   64|      0|                    return true
   65|      0|                }
   66|      0|            }
   67|      0|            return false
   68|      0|        }
   69|       |    }
   70|       |    
   71|       |    // MARK: Initialization
   72|       |
   73|       |    internal init(from: ConstraintItem,
   74|       |                  to: ConstraintItem,
   75|       |                  relation: ConstraintRelation,
   76|       |                  sourceLocation: (String, UInt),
   77|       |                  label: String?,
   78|       |                  multiplier: ConstraintMultiplierTarget,
   79|       |                  constant: ConstraintConstantTarget,
   80|      0|                  priority: ConstraintPriorityTarget) {
   81|      0|        self.from = from
   82|      0|        self.to = to
   83|      0|        self.relation = relation
   84|      0|        self.sourceLocation = sourceLocation
   85|      0|        self.label = label
   86|      0|        self.multiplier = multiplier
   87|      0|        self.constant = constant
   88|      0|        self.priority = priority
   89|      0|        self.layoutConstraints = []
   90|      0|
   91|      0|        // get attributes
   92|      0|        let layoutFromAttributes = self.from.attributes.layoutAttributes
   93|      0|        let layoutToAttributes = self.to.attributes.layoutAttributes
   94|      0|
   95|      0|        // get layout from
   96|      0|        let layoutFrom = self.from.layoutConstraintItem!
   97|      0|
   98|      0|        // get relation
   99|      0|        let layoutRelation = self.relation.layoutRelation
  100|      0|
  101|      0|        for layoutFromAttribute in layoutFromAttributes {
  102|      0|            // get layout to attribute
  103|      0|            let layoutToAttribute: LayoutAttribute
  104|      0|            #if os(iOS) || os(tvOS)
  105|      0|                if layoutToAttributes.count > 0 {
  106|      0|                    if self.from.attributes == .edges && self.to.attributes == .margins {
  107|      0|                        switch layoutFromAttribute {
  108|      0|                        case .left:
  109|      0|                            layoutToAttribute = .leftMargin
  110|      0|                        case .right:
  111|      0|                            layoutToAttribute = .rightMargin
  112|      0|                        case .top:
  113|      0|                            layoutToAttribute = .topMargin
  114|      0|                        case .bottom:
  115|      0|                            layoutToAttribute = .bottomMargin
  116|      0|                        default:
  117|      0|                            fatalError()
  118|      0|                        }
  119|      0|                    } else if self.from.attributes == .margins && self.to.attributes == .edges {
  120|      0|                        switch layoutFromAttribute {
  121|      0|                        case .leftMargin:
  122|      0|                            layoutToAttribute = .left
  123|      0|                        case .rightMargin:
  124|      0|                            layoutToAttribute = .right
  125|      0|                        case .topMargin:
  126|      0|                            layoutToAttribute = .top
  127|      0|                        case .bottomMargin:
  128|      0|                            layoutToAttribute = .bottom
  129|      0|                        default:
  130|      0|                            fatalError()
  131|      0|                        }
  132|      0|                    } else if self.from.attributes == .directionalEdges && self.to.attributes == .directionalMargins {
  133|      0|                      switch layoutFromAttribute {
  134|      0|                      case .leading:
  135|      0|                        layoutToAttribute = .leadingMargin
  136|      0|                      case .trailing:
  137|      0|                        layoutToAttribute = .trailingMargin
  138|      0|                      case .top:
  139|      0|                        layoutToAttribute = .topMargin
  140|      0|                      case .bottom:
  141|      0|                        layoutToAttribute = .bottomMargin
  142|      0|                      default:
  143|      0|                        fatalError()
  144|      0|                      }
  145|      0|                    } else if self.from.attributes == .directionalMargins && self.to.attributes == .directionalEdges {
  146|      0|                      switch layoutFromAttribute {
  147|      0|                      case .leadingMargin:
  148|      0|                        layoutToAttribute = .leading
  149|      0|                      case .trailingMargin:
  150|      0|                        layoutToAttribute = .trailing
  151|      0|                      case .topMargin:
  152|      0|                        layoutToAttribute = .top
  153|      0|                      case .bottomMargin:
  154|      0|                        layoutToAttribute = .bottom
  155|      0|                      default:
  156|      0|                        fatalError()
  157|      0|                      }
  158|      0|                    } else if self.from.attributes == self.to.attributes {
  159|      0|                        layoutToAttribute = layoutFromAttribute
  160|      0|                    } else {
  161|      0|                        layoutToAttribute = layoutToAttributes[0]
  162|      0|                    }
  163|      0|                } else {
  164|      0|                    if self.to.target == nil && (layoutFromAttribute == .centerX || layoutFromAttribute == .centerY) {
  165|      0|                        layoutToAttribute = layoutFromAttribute == .centerX ? .left : .top
  166|      0|                    } else {
  167|      0|                        layoutToAttribute = layoutFromAttribute
  168|      0|                    }
  169|      0|                }
  170|      0|            #else
  171|      0|                if self.from.attributes == self.to.attributes {
  172|      0|                    layoutToAttribute = layoutFromAttribute
  173|      0|                } else if layoutToAttributes.count > 0 {
  174|      0|                    layoutToAttribute = layoutToAttributes[0]
  175|      0|                } else {
  176|      0|                    layoutToAttribute = layoutFromAttribute
  177|      0|                }
  178|      0|            #endif
  179|      0|
  180|      0|            // get layout constant
  181|      0|            let layoutConstant: CGFloat = self.constant.constraintConstantTargetValueFor(layoutAttribute: layoutToAttribute)
  182|      0|
  183|      0|            // get layout to
  184|      0|            var layoutTo: AnyObject? = self.to.target
  185|      0|
  186|      0|            // use superview if possible
  187|      0|            if layoutTo == nil && layoutToAttribute != .width && layoutToAttribute != .height {
  188|      0|                layoutTo = layoutFrom.superview
  189|      0|            }
  190|      0|
  191|      0|            // create layout constraint
  192|      0|            let layoutConstraint = LayoutConstraint(
  193|      0|                item: layoutFrom,
  194|      0|                attribute: layoutFromAttribute,
  195|      0|                relatedBy: layoutRelation,
  196|      0|                toItem: layoutTo,
  197|      0|                attribute: layoutToAttribute,
  198|      0|                multiplier: self.multiplier.constraintMultiplierTargetValue,
  199|      0|                constant: layoutConstant
  200|      0|            )
  201|      0|
  202|      0|            // set label
  203|      0|            layoutConstraint.label = self.label
  204|      0|
  205|      0|            // set priority
  206|      0|            layoutConstraint.priority = LayoutPriority(rawValue: self.priority.constraintPriorityTargetValue)
  207|      0|
  208|      0|            // set constraint
  209|      0|            layoutConstraint.constraint = self
  210|      0|
  211|      0|            // append
  212|      0|            self.layoutConstraints.append(layoutConstraint)
  213|      0|        }
  214|      0|    }
  215|       |
  216|       |    // MARK: Public
  217|       |
  218|       |    @available(*, deprecated, message:"Use activate().")
  219|      0|    public func install() {
  220|      0|        self.activate()
  221|      0|    }
  222|       |
  223|       |    @available(*, deprecated, message:"Use deactivate().")
  224|      0|    public func uninstall() {
  225|      0|        self.deactivate()
  226|      0|    }
  227|       |
  228|      0|    public func activate() {
  229|      0|        self.activateIfNeeded()
  230|      0|    }
  231|       |
  232|      0|    public func deactivate() {
  233|      0|        self.deactivateIfNeeded()
  234|      0|    }
  235|       |
  236|       |    @discardableResult
  237|      0|    public func update(offset: ConstraintOffsetTarget) -> Constraint {
  238|      0|        self.constant = offset.constraintOffsetTargetValue
  239|      0|        return self
  240|      0|    }
  241|       |
  242|       |    @discardableResult
  243|      0|    public func update(inset: ConstraintInsetTarget) -> Constraint {
  244|      0|        self.constant = inset.constraintInsetTargetValue
  245|      0|        return self
  246|      0|    }
  247|       |
  248|       |    #if os(iOS) || os(tvOS)
  249|       |    @discardableResult
  250|       |    @available(iOS 11.0, tvOS 11.0, *)
  251|      0|    public func update(inset: ConstraintDirectionalInsetTarget) -> Constraint {
  252|      0|      self.constant = inset.constraintDirectionalInsetTargetValue
  253|      0|      return self
  254|      0|    }
  255|       |    #endif
  256|       |
  257|       |    @discardableResult
  258|      0|    public func update(priority: ConstraintPriorityTarget) -> Constraint {
  259|      0|        self.priority = priority.constraintPriorityTargetValue
  260|      0|        return self
  261|      0|    }
  262|       |
  263|       |    @discardableResult
  264|      0|    public func update(priority: ConstraintPriority) -> Constraint {
  265|      0|        self.priority = priority.value
  266|      0|        return self
  267|      0|    }
  268|       |
  269|       |    @available(*, deprecated, message:"Use update(offset: ConstraintOffsetTarget) instead.")
  270|      0|    public func updateOffset(amount: ConstraintOffsetTarget) -> Void { self.update(offset: amount) }
  271|       |
  272|       |    @available(*, deprecated, message:"Use update(inset: ConstraintInsetTarget) instead.")
  273|      0|    public func updateInsets(amount: ConstraintInsetTarget) -> Void { self.update(inset: amount) }
  274|       |
  275|       |    @available(*, deprecated, message:"Use update(priority: ConstraintPriorityTarget) instead.")
  276|      0|    public func updatePriority(amount: ConstraintPriorityTarget) -> Void { self.update(priority: amount) }
  277|       |
  278|       |    @available(*, deprecated, message:"Use update(priority: ConstraintPriorityTarget) instead.")
  279|      0|    public func updatePriorityRequired() -> Void {}
  280|       |
  281|       |    @available(*, deprecated, message:"Use update(priority: ConstraintPriorityTarget) instead.")
  282|      0|    public func updatePriorityHigh() -> Void { fatalError("Must be implemented by Concrete subclass.") }
  283|       |
  284|       |    @available(*, deprecated, message:"Use update(priority: ConstraintPriorityTarget) instead.")
  285|      0|    public func updatePriorityMedium() -> Void { fatalError("Must be implemented by Concrete subclass.") }
  286|       |
  287|       |    @available(*, deprecated, message:"Use update(priority: ConstraintPriorityTarget) instead.")
  288|      0|    public func updatePriorityLow() -> Void { fatalError("Must be implemented by Concrete subclass.") }
  289|       |
  290|       |    // MARK: Internal
  291|       |
  292|      0|    internal func updateConstantAndPriorityIfNeeded() {
  293|      0|        for layoutConstraint in self.layoutConstraints {
  294|      0|            let attribute = (layoutConstraint.secondAttribute == .notAnAttribute) ? layoutConstraint.firstAttribute : layoutConstraint.secondAttribute
  295|      0|            layoutConstraint.constant = self.constant.constraintConstantTargetValueFor(layoutAttribute: attribute)
  296|      0|
  297|      0|            let requiredPriority = ConstraintPriority.required.value
  298|      0|            if (layoutConstraint.priority.rawValue < requiredPriority), (self.priority.constraintPriorityTargetValue != requiredPriority) {
  299|      0|                layoutConstraint.priority = LayoutPriority(rawValue: self.priority.constraintPriorityTargetValue)
  300|      0|            }
  301|      0|        }
  302|      0|    }
  303|       |
  304|      0|    internal func activateIfNeeded(updatingExisting: Bool = false) {
  305|      0|        guard let item = self.from.layoutConstraintItem else {
  306|      0|            print("WARNING: SnapKit failed to get from item from constraint. Activate will be a no-op.")
  307|      0|            return
  308|      0|        }
  309|      0|        let layoutConstraints = self.layoutConstraints
  310|      0|
  311|      0|        if updatingExisting {
  312|      0|            var existingLayoutConstraints: [LayoutConstraint] = []
  313|      0|            for constraint in item.constraints {
  314|      0|                existingLayoutConstraints += constraint.layoutConstraints
  315|      0|            }
  316|      0|
  317|      0|            for layoutConstraint in layoutConstraints {
  318|      0|                let existingLayoutConstraint = existingLayoutConstraints.first { $0 == layoutConstraint }
  319|      0|                guard let updateLayoutConstraint = existingLayoutConstraint else {
  320|      0|                    fatalError("Updated constraint could not find existing matching constraint to update: \(layoutConstraint)")
  321|      0|                }
  322|      0|
  323|      0|                let updateLayoutAttribute = (updateLayoutConstraint.secondAttribute == .notAnAttribute) ? updateLayoutConstraint.firstAttribute : updateLayoutConstraint.secondAttribute
  324|      0|                updateLayoutConstraint.constant = self.constant.constraintConstantTargetValueFor(layoutAttribute: updateLayoutAttribute)
  325|      0|            }
  326|      0|        } else {
  327|      0|            NSLayoutConstraint.activate(layoutConstraints)
  328|      0|            item.add(constraints: [self])
  329|      0|        }
  330|      0|    }
  331|       |
  332|      0|    internal func deactivateIfNeeded() {
  333|      0|        guard let item = self.from.layoutConstraintItem else {
  334|      0|            print("WARNING: SnapKit failed to get from item from constraint. Deactivate will be a no-op.")
  335|      0|            return
  336|      0|        }
  337|      0|        let layoutConstraints = self.layoutConstraints
  338|      0|        NSLayoutConstraint.deactivate(layoutConstraints)
  339|      0|        item.remove(constraints: [self])
  340|      0|    }
  341|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintAttributes.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |internal struct ConstraintAttributes : OptionSet, ExpressibleByIntegerLiteral {
   32|       |    
   33|       |    typealias IntegerLiteralType = UInt
   34|       |    
   35|      0|    internal init(rawValue: UInt) {
   36|      0|        self.rawValue = rawValue
   37|      0|    }
   38|      0|    internal init(_ rawValue: UInt) {
   39|      0|        self.init(rawValue: rawValue)
   40|      0|    }
   41|      0|    internal init(nilLiteral: ()) {
   42|      0|        self.rawValue = 0
   43|      0|    }
   44|      0|    internal init(integerLiteral rawValue: IntegerLiteralType) {
   45|      0|        self.init(rawValue: rawValue)
   46|      0|    }
   47|       |    
   48|       |    internal private(set) var rawValue: UInt
   49|      0|    internal static var allZeros: ConstraintAttributes { return 0 }
   50|      0|    internal static func convertFromNilLiteral() -> ConstraintAttributes { return 0 }
   51|      0|    internal var boolValue: Bool { return self.rawValue != 0 }
   52|       |    
   53|      0|    internal func toRaw() -> UInt { return self.rawValue }
   54|      0|    internal static func fromRaw(_ raw: UInt) -> ConstraintAttributes? { return self.init(raw) }
   55|      0|    internal static func fromMask(_ raw: UInt) -> ConstraintAttributes { return self.init(raw) }
   56|       |    
   57|       |    // normal
   58|       |    
   59|      0|    internal static var none: ConstraintAttributes { return 0 }
   60|      0|    internal static var left: ConstraintAttributes { return 1 }
   61|      0|    internal static var top: ConstraintAttributes {  return 2 }
   62|      0|    internal static var right: ConstraintAttributes { return 4 }
   63|      0|    internal static var bottom: ConstraintAttributes { return 8 }
   64|      0|    internal static var leading: ConstraintAttributes { return 16 }
   65|      0|    internal static var trailing: ConstraintAttributes { return 32 }
   66|      0|    internal static var width: ConstraintAttributes { return 64 }
   67|      0|    internal static var height: ConstraintAttributes { return 128 }
   68|      0|    internal static var centerX: ConstraintAttributes { return 256 }
   69|      0|    internal static var centerY: ConstraintAttributes { return 512 }
   70|      0|    internal static var lastBaseline: ConstraintAttributes { return 1024 }
   71|       |    
   72|       |    @available(iOS 8.0, OSX 10.11, *)
   73|      0|    internal static var firstBaseline: ConstraintAttributes { return 2048 }
   74|       |    
   75|       |    @available(iOS 8.0, *)
   76|      0|    internal static var leftMargin: ConstraintAttributes { return 4096 }
   77|       |    
   78|       |    @available(iOS 8.0, *)
   79|      0|    internal static var rightMargin: ConstraintAttributes { return 8192 }
   80|       |    
   81|       |    @available(iOS 8.0, *)
   82|      0|    internal static var topMargin: ConstraintAttributes { return 16384 }
   83|       |    
   84|       |    @available(iOS 8.0, *)
   85|      0|    internal static var bottomMargin: ConstraintAttributes { return 32768 }
   86|       |    
   87|       |    @available(iOS 8.0, *)
   88|      0|    internal static var leadingMargin: ConstraintAttributes { return 65536 }
   89|       |    
   90|       |    @available(iOS 8.0, *)
   91|      0|    internal static var trailingMargin: ConstraintAttributes { return 131072 }
   92|       |    
   93|       |    @available(iOS 8.0, *)
   94|      0|    internal static var centerXWithinMargins: ConstraintAttributes { return 262144 }
   95|       |    
   96|       |    @available(iOS 8.0, *)
   97|      0|    internal static var centerYWithinMargins: ConstraintAttributes { return 524288 }
   98|       |    
   99|       |    // aggregates
  100|       |    
  101|      0|    internal static var edges: ConstraintAttributes { return 15 }
  102|      0|    internal static var directionalEdges: ConstraintAttributes { return 58 }
  103|      0|    internal static var size: ConstraintAttributes { return 192 }
  104|      0|    internal static var center: ConstraintAttributes { return 768 }
  105|       |    
  106|       |    @available(iOS 8.0, *)
  107|      0|    internal static var margins: ConstraintAttributes { return 61440 }
  108|       |    
  109|       |    @available(iOS 8.0, *)
  110|      0|    internal static var directionalMargins: ConstraintAttributes { return 245760 }
  111|       |
  112|       |    @available(iOS 8.0, *)
  113|      0|    internal static var centerWithinMargins: ConstraintAttributes { return 786432 }
  114|       |    
  115|      0|    internal var layoutAttributes:[LayoutAttribute] {
  116|      0|        var attrs = [LayoutAttribute]()
  117|      0|        if (self.contains(ConstraintAttributes.left)) {
  118|      0|            attrs.append(.left)
  119|      0|        }
  120|      0|        if (self.contains(ConstraintAttributes.top)) {
  121|      0|            attrs.append(.top)
  122|      0|        }
  123|      0|        if (self.contains(ConstraintAttributes.right)) {
  124|      0|            attrs.append(.right)
  125|      0|        }
  126|      0|        if (self.contains(ConstraintAttributes.bottom)) {
  127|      0|            attrs.append(.bottom)
  128|      0|        }
  129|      0|        if (self.contains(ConstraintAttributes.leading)) {
  130|      0|            attrs.append(.leading)
  131|      0|        }
  132|      0|        if (self.contains(ConstraintAttributes.trailing)) {
  133|      0|            attrs.append(.trailing)
  134|      0|        }
  135|      0|        if (self.contains(ConstraintAttributes.width)) {
  136|      0|            attrs.append(.width)
  137|      0|        }
  138|      0|        if (self.contains(ConstraintAttributes.height)) {
  139|      0|            attrs.append(.height)
  140|      0|        }
  141|      0|        if (self.contains(ConstraintAttributes.centerX)) {
  142|      0|            attrs.append(.centerX)
  143|      0|        }
  144|      0|        if (self.contains(ConstraintAttributes.centerY)) {
  145|      0|            attrs.append(.centerY)
  146|      0|        }
  147|      0|        if (self.contains(ConstraintAttributes.lastBaseline)) {
  148|      0|            attrs.append(.lastBaseline)
  149|      0|        }
  150|      0|        
  151|      0|        #if os(iOS) || os(tvOS)
  152|      0|            if (self.contains(ConstraintAttributes.firstBaseline)) {
  153|      0|                attrs.append(.firstBaseline)
  154|      0|            }
  155|      0|            if (self.contains(ConstraintAttributes.leftMargin)) {
  156|      0|                attrs.append(.leftMargin)
  157|      0|            }
  158|      0|            if (self.contains(ConstraintAttributes.rightMargin)) {
  159|      0|                attrs.append(.rightMargin)
  160|      0|            }
  161|      0|            if (self.contains(ConstraintAttributes.topMargin)) {
  162|      0|                attrs.append(.topMargin)
  163|      0|            }
  164|      0|            if (self.contains(ConstraintAttributes.bottomMargin)) {
  165|      0|                attrs.append(.bottomMargin)
  166|      0|            }
  167|      0|            if (self.contains(ConstraintAttributes.leadingMargin)) {
  168|      0|                attrs.append(.leadingMargin)
  169|      0|            }
  170|      0|            if (self.contains(ConstraintAttributes.trailingMargin)) {
  171|      0|                attrs.append(.trailingMargin)
  172|      0|            }
  173|      0|            if (self.contains(ConstraintAttributes.centerXWithinMargins)) {
  174|      0|                attrs.append(.centerXWithinMargins)
  175|      0|            }
  176|      0|            if (self.contains(ConstraintAttributes.centerYWithinMargins)) {
  177|      0|                attrs.append(.centerYWithinMargins)
  178|      0|            }
  179|      0|        #endif
  180|      0|        
  181|      0|        return attrs
  182|      0|    }
  183|       |}
  184|       |
  185|      0|internal func + (left: ConstraintAttributes, right: ConstraintAttributes) -> ConstraintAttributes {
  186|      0|    return left.union(right)
  187|      0|}
  188|       |
  189|      0|internal func +=(left: inout ConstraintAttributes, right: ConstraintAttributes) {
  190|      0|    left.formUnion(right)
  191|      0|}
  192|       |
  193|      0|internal func -=(left: inout ConstraintAttributes, right: ConstraintAttributes) {
  194|      0|    left.subtract(right)
  195|      0|}
  196|       |
  197|      0|internal func ==(left: ConstraintAttributes, right: ConstraintAttributes) -> Bool {
  198|      0|    return left.rawValue == right.rawValue
  199|      0|}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintConstantTarget.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public protocol ConstraintConstantTarget {
   32|       |}
   33|       |
   34|       |extension CGPoint: ConstraintConstantTarget {
   35|       |}
   36|       |
   37|       |extension CGSize: ConstraintConstantTarget {    
   38|       |}
   39|       |
   40|       |extension ConstraintInsets: ConstraintConstantTarget {
   41|       |}
   42|       |
   43|       |#if os(iOS) || os(tvOS)
   44|       |@available(iOS 11.0, tvOS 11.0, *)
   45|       |extension ConstraintDirectionalInsets: ConstraintConstantTarget {
   46|       |}
   47|       |#endif
   48|       |
   49|       |extension ConstraintConstantTarget {
   50|       |    
   51|      0|    internal func constraintConstantTargetValueFor(layoutAttribute: LayoutAttribute) -> CGFloat {
   52|      0|        if let value = self as? CGFloat {
   53|      0|            return value
   54|      0|        }
   55|      0|        
   56|      0|        if let value = self as? Float {
   57|      0|            return CGFloat(value)
   58|      0|        }
   59|      0|        
   60|      0|        if let value = self as? Double {
   61|      0|            return CGFloat(value)
   62|      0|        }
   63|      0|        
   64|      0|        if let value = self as? Int {
   65|      0|            return CGFloat(value)
   66|      0|        }
   67|      0|        
   68|      0|        if let value = self as? UInt {
   69|      0|            return CGFloat(value)
   70|      0|        }
   71|      0|        
   72|      0|        if let value = self as? CGSize {
   73|      0|            if layoutAttribute == .width {
   74|      0|                return value.width
   75|      0|            } else if layoutAttribute == .height {
   76|      0|                return value.height
   77|      0|            } else {
   78|      0|                return 0.0
   79|      0|            }
   80|      0|        }
   81|      0|        
   82|      0|        if let value = self as? CGPoint {
   83|      0|            #if os(iOS) || os(tvOS)
   84|      0|                switch layoutAttribute {
   85|      0|                case .left, .right, .leading, .trailing, .centerX, .leftMargin, .rightMargin, .leadingMargin, .trailingMargin, .centerXWithinMargins:
   86|      0|                    return value.x
   87|      0|                case .top, .bottom, .centerY, .topMargin, .bottomMargin, .centerYWithinMargins, .lastBaseline, .firstBaseline:
   88|      0|                    return value.y
   89|      0|                case .width, .height, .notAnAttribute:
   90|      0|                    return 0.0
   91|      0|                #if swift(>=5.0)
   92|      0|                @unknown default:
   93|      0|                    return 0.0
   94|      0|                #endif
   95|      0|            }
   96|      0|            #else
   97|      0|                switch layoutAttribute {
   98|      0|                case .left, .right, .leading, .trailing, .centerX:
   99|      0|                    return value.x
  100|      0|                case .top, .bottom, .centerY, .lastBaseline, .firstBaseline:
  101|      0|                    return value.y
  102|      0|                case .width, .height, .notAnAttribute:
  103|      0|                    return 0.0
  104|      0|                #if swift(>=5.0)
  105|      0|                @unknown default:
  106|      0|                    return 0.0
  107|      0|                #endif
  108|      0|            }
  109|      0|            #endif
  110|      0|        }
  111|      0|        
  112|      0|        if let value = self as? ConstraintInsets {
  113|      0|            #if os(iOS) || os(tvOS)
  114|      0|                switch layoutAttribute {
  115|      0|                case .left, .leftMargin:
  116|      0|                    return value.left
  117|      0|                case .top, .topMargin, .firstBaseline:
  118|      0|                    return value.top
  119|      0|                case .right, .rightMargin:
  120|      0|                    return -value.right
  121|      0|                case .bottom, .bottomMargin, .lastBaseline:
  122|      0|                    return -value.bottom
  123|      0|                case .leading, .leadingMargin:
  124|      0|                    return (ConstraintConfig.interfaceLayoutDirection == .leftToRight) ? value.left : value.right
  125|      0|                case .trailing, .trailingMargin:
  126|      0|                    return (ConstraintConfig.interfaceLayoutDirection == .leftToRight) ? -value.right : -value.left
  127|      0|                case .centerX, .centerXWithinMargins:
  128|      0|                    return (value.left - value.right) / 2
  129|      0|                case .centerY, .centerYWithinMargins:
  130|      0|                    return (value.top - value.bottom) / 2
  131|      0|                case .width:
  132|      0|                    return -(value.left + value.right)
  133|      0|                case .height:
  134|      0|                    return -(value.top + value.bottom)
  135|      0|                case .notAnAttribute:
  136|      0|                    return 0.0
  137|      0|                #if swift(>=5.0)
  138|      0|                @unknown default:
  139|      0|                    return 0.0
  140|      0|                #endif
  141|      0|            }
  142|      0|            #else
  143|      0|                switch layoutAttribute {
  144|      0|                case .left:
  145|      0|                    return value.left
  146|      0|                case .top, .firstBaseline:
  147|      0|                    return value.top
  148|      0|                case .right:
  149|      0|                    return -value.right
  150|      0|                case .bottom, .lastBaseline:
  151|      0|                    return -value.bottom
  152|      0|                case .leading:
  153|      0|                    return (ConstraintConfig.interfaceLayoutDirection == .leftToRight) ? value.left : value.right
  154|      0|                case .trailing:
  155|      0|                    return (ConstraintConfig.interfaceLayoutDirection == .leftToRight) ? -value.right : -value.left
  156|      0|                case .centerX:
  157|      0|                    return (value.left - value.right) / 2
  158|      0|                case .centerY:
  159|      0|                    return (value.top - value.bottom) / 2
  160|      0|                case .width:
  161|      0|                    return -(value.left + value.right)
  162|      0|                case .height:
  163|      0|                    return -(value.top + value.bottom)
  164|      0|                case .notAnAttribute:
  165|      0|                    return 0.0
  166|      0|                #if swift(>=5.0)
  167|      0|                @unknown default:
  168|      0|                    return 0.0
  169|      0|                #endif
  170|      0|            }
  171|      0|            #endif
  172|      0|        }
  173|      0|        
  174|      0|        #if os(iOS) || os(tvOS)
  175|      0|            if #available(iOS 11.0, tvOS 11.0, *), let value = self as? ConstraintDirectionalInsets {
  176|      0|                switch layoutAttribute {
  177|      0|                case .left, .leftMargin:
  178|      0|                  return (ConstraintConfig.interfaceLayoutDirection == .leftToRight) ? value.leading : value.trailing
  179|      0|                case .top, .topMargin, .firstBaseline:
  180|      0|                    return value.top
  181|      0|                case .right, .rightMargin:
  182|      0|                  return (ConstraintConfig.interfaceLayoutDirection == .leftToRight) ? -value.trailing : -value.leading
  183|      0|                case .bottom, .bottomMargin, .lastBaseline:
  184|      0|                    return -value.bottom
  185|      0|                case .leading, .leadingMargin:
  186|      0|                    return value.leading
  187|      0|                case .trailing, .trailingMargin:
  188|      0|                    return -value.trailing
  189|      0|                case .centerX, .centerXWithinMargins:
  190|      0|                    return (value.leading - value.trailing) / 2
  191|      0|                case .centerY, .centerYWithinMargins:
  192|      0|                    return (value.top - value.bottom) / 2
  193|      0|                case .width:
  194|      0|                    return -(value.leading + value.trailing)
  195|      0|                case .height:
  196|      0|                    return -(value.top + value.bottom)
  197|      0|                case .notAnAttribute:
  198|      0|                    return 0.0
  199|      0|                #if swift(>=5.0)
  200|      0|                @unknown default:
  201|      0|                    return 0.0
  202|      0|                #else
  203|      0|                default:
  204|      0|                    return 0.0
  205|      0|                #endif
  206|      0|                }
  207|      0|            }
  208|      0|        #endif
  209|      0|
  210|      0|        return 0.0
  211|      0|    }
  212|       |    
  213|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintDSL.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public protocol ConstraintDSL {
   32|       |    
   33|       |    var target: AnyObject? { get }
   34|       |    
   35|       |    func setLabel(_ value: String?)
   36|       |    func label() -> String?
   37|       |    
   38|       |}
   39|       |extension ConstraintDSL {
   40|       |    
   41|      0|    public func setLabel(_ value: String?) {
   42|      0|        objc_setAssociatedObject(self.target as Any, &labelKey, value, .OBJC_ASSOCIATION_COPY_NONATOMIC)
   43|      0|    }
   44|      0|    public func label() -> String? {
   45|      0|        return objc_getAssociatedObject(self.target as Any, &labelKey) as? String
   46|      0|    }
   47|       |    
   48|       |}
   49|       |private var labelKey: UInt8 = 0
   50|       |
   51|       |
   52|       |public protocol ConstraintBasicAttributesDSL : ConstraintDSL {
   53|       |}
   54|       |extension ConstraintBasicAttributesDSL {
   55|       |    
   56|       |    // MARK: Basics
   57|       |    
   58|      0|    public var left: ConstraintItem {
   59|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.left)
   60|      0|    }
   61|       |    
   62|      0|    public var top: ConstraintItem {
   63|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.top)
   64|      0|    }
   65|       |    
   66|      0|    public var right: ConstraintItem {
   67|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.right)
   68|      0|    }
   69|       |    
   70|      0|    public var bottom: ConstraintItem {
   71|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.bottom)
   72|      0|    }
   73|       |    
   74|      0|    public var leading: ConstraintItem {
   75|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.leading)
   76|      0|    }
   77|       |    
   78|      0|    public var trailing: ConstraintItem {
   79|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.trailing)
   80|      0|    }
   81|       |    
   82|      0|    public var width: ConstraintItem {
   83|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.width)
   84|      0|    }
   85|       |    
   86|      0|    public var height: ConstraintItem {
   87|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.height)
   88|      0|    }
   89|       |    
   90|      0|    public var centerX: ConstraintItem {
   91|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.centerX)
   92|      0|    }
   93|       |    
   94|      0|    public var centerY: ConstraintItem {
   95|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.centerY)
   96|      0|    }
   97|       |    
   98|      0|    public var edges: ConstraintItem {
   99|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.edges)
  100|      0|    }
  101|       |    
  102|      0|    public var directionalEdges: ConstraintItem {
  103|      0|      return ConstraintItem(target: self.target, attributes: ConstraintAttributes.directionalEdges)
  104|      0|    }
  105|       |
  106|      0|    public var size: ConstraintItem {
  107|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.size)
  108|      0|    }
  109|       |    
  110|      0|    public var center: ConstraintItem {
  111|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.center)
  112|      0|    }
  113|       |    
  114|       |}
  115|       |
  116|       |public protocol ConstraintAttributesDSL : ConstraintBasicAttributesDSL {
  117|       |}
  118|       |extension ConstraintAttributesDSL {
  119|       |    
  120|       |    // MARK: Baselines
  121|       |    
  122|       |    @available(*, deprecated, message:"Use .lastBaseline instead")
  123|      0|    public var baseline: ConstraintItem {
  124|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.lastBaseline)
  125|      0|    }
  126|       |    
  127|       |    @available(iOS 8.0, OSX 10.11, *)
  128|      0|    public var lastBaseline: ConstraintItem {
  129|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.lastBaseline)
  130|      0|    }
  131|       |    
  132|       |    @available(iOS 8.0, OSX 10.11, *)
  133|      0|    public var firstBaseline: ConstraintItem {
  134|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.firstBaseline)
  135|      0|    }
  136|       |    
  137|       |    // MARK: Margins
  138|       |    
  139|       |    @available(iOS 8.0, *)
  140|      0|    public var leftMargin: ConstraintItem {
  141|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.leftMargin)
  142|      0|    }
  143|       |    
  144|       |    @available(iOS 8.0, *)
  145|      0|    public var topMargin: ConstraintItem {
  146|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.topMargin)
  147|      0|    }
  148|       |    
  149|       |    @available(iOS 8.0, *)
  150|      0|    public var rightMargin: ConstraintItem {
  151|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.rightMargin)
  152|      0|    }
  153|       |    
  154|       |    @available(iOS 8.0, *)
  155|      0|    public var bottomMargin: ConstraintItem {
  156|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.bottomMargin)
  157|      0|    }
  158|       |    
  159|       |    @available(iOS 8.0, *)
  160|      0|    public var leadingMargin: ConstraintItem {
  161|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.leadingMargin)
  162|      0|    }
  163|       |    
  164|       |    @available(iOS 8.0, *)
  165|      0|    public var trailingMargin: ConstraintItem {
  166|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.trailingMargin)
  167|      0|    }
  168|       |    
  169|       |    @available(iOS 8.0, *)
  170|      0|    public var centerXWithinMargins: ConstraintItem {
  171|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.centerXWithinMargins)
  172|      0|    }
  173|       |    
  174|       |    @available(iOS 8.0, *)
  175|      0|    public var centerYWithinMargins: ConstraintItem {
  176|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.centerYWithinMargins)
  177|      0|    }
  178|       |    
  179|       |    @available(iOS 8.0, *)
  180|      0|    public var margins: ConstraintItem {
  181|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.margins)
  182|      0|    }
  183|       |    
  184|       |    @available(iOS 8.0, *)
  185|      0|    public var directionalMargins: ConstraintItem {
  186|      0|      return ConstraintItem(target: self.target, attributes: ConstraintAttributes.directionalMargins)
  187|      0|    }
  188|       |
  189|       |    @available(iOS 8.0, *)
  190|      0|    public var centerWithinMargins: ConstraintItem {
  191|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.centerWithinMargins)
  192|      0|    }
  193|       |    
  194|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintDescription.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public class ConstraintDescription {
   32|       |    
   33|       |    internal let item: LayoutConstraintItem
   34|       |    internal var attributes: ConstraintAttributes
   35|       |    internal var relation: ConstraintRelation? = nil
   36|       |    internal var sourceLocation: (String, UInt)? = nil
   37|       |    internal var label: String? = nil
   38|       |    internal var related: ConstraintItem? = nil
   39|      0|    internal var multiplier: ConstraintMultiplierTarget = 1.0
   40|      0|    internal var constant: ConstraintConstantTarget = 0.0
   41|      0|    internal var priority: ConstraintPriorityTarget = 1000.0
   42|      0|    internal lazy var constraint: Constraint? = {
   43|      0|        guard let relation = self.relation,
   44|      0|              let related = self.related,
   45|      0|              let sourceLocation = self.sourceLocation else {
   46|      0|            return nil
   47|      0|        }
   48|      0|        let from = ConstraintItem(target: self.item, attributes: self.attributes)
   49|      0|        
   50|      0|        return Constraint(
   51|      0|            from: from,
   52|      0|            to: related,
   53|      0|            relation: relation,
   54|      0|            sourceLocation: sourceLocation,
   55|      0|            label: self.label,
   56|      0|            multiplier: self.multiplier,
   57|      0|            constant: self.constant,
   58|      0|            priority: self.priority
   59|      0|        )
   60|      0|    }()
   61|       |    
   62|       |    // MARK: Initialization
   63|       |    
   64|      0|    internal init(item: LayoutConstraintItem, attributes: ConstraintAttributes) {
   65|      0|        self.item = item
   66|      0|        self.attributes = attributes
   67|      0|    }
   68|       |    
   69|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintDirectionalInsetTarget.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |import UIKit
   26|       |#else
   27|       |import AppKit
   28|       |#endif
   29|       |
   30|       |#if os(iOS) || os(tvOS)
   31|       |public protocol ConstraintDirectionalInsetTarget: ConstraintConstantTarget {
   32|       |}
   33|       |
   34|       |@available(iOS 11.0, tvOS 11.0, *)
   35|       |extension ConstraintDirectionalInsets: ConstraintDirectionalInsetTarget {
   36|       |}
   37|       |
   38|       |extension ConstraintDirectionalInsetTarget {
   39|       |
   40|       |  @available(iOS 11.0, tvOS 11.0, *)
   41|      0|  internal var constraintDirectionalInsetTargetValue: ConstraintDirectionalInsets {
   42|      0|    if let amount = self as? ConstraintDirectionalInsets {
   43|      0|      return amount
   44|      0|    } else {
   45|      0|      return ConstraintDirectionalInsets(top: 0, leading: 0, bottom: 0, trailing: 0)
   46|      0|    }
   47|      0|  }
   48|       |}
   49|       |#endif

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintInsetTarget.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public protocol ConstraintInsetTarget: ConstraintConstantTarget {
   32|       |}
   33|       |
   34|       |extension Int: ConstraintInsetTarget {
   35|       |}
   36|       |
   37|       |extension UInt: ConstraintInsetTarget {
   38|       |}
   39|       |
   40|       |extension Float: ConstraintInsetTarget {
   41|       |}
   42|       |
   43|       |extension Double: ConstraintInsetTarget {
   44|       |}
   45|       |
   46|       |extension CGFloat: ConstraintInsetTarget {
   47|       |}
   48|       |
   49|       |extension ConstraintInsets: ConstraintInsetTarget {
   50|       |}
   51|       |
   52|       |extension ConstraintInsetTarget {
   53|       |
   54|      0|    internal var constraintInsetTargetValue: ConstraintInsets {
   55|      0|        if let amount = self as? ConstraintInsets {
   56|      0|            return amount
   57|      0|        } else if let amount = self as? Float {
   58|      0|            return ConstraintInsets(top: CGFloat(amount), left: CGFloat(amount), bottom: CGFloat(amount), right: CGFloat(amount))
   59|      0|        } else if let amount = self as? Double {
   60|      0|            return ConstraintInsets(top: CGFloat(amount), left: CGFloat(amount), bottom: CGFloat(amount), right: CGFloat(amount))
   61|      0|        } else if let amount = self as? CGFloat {
   62|      0|            return ConstraintInsets(top: amount, left: amount, bottom: amount, right: amount)
   63|      0|        } else if let amount = self as? Int {
   64|      0|            return ConstraintInsets(top: CGFloat(amount), left: CGFloat(amount), bottom: CGFloat(amount), right: CGFloat(amount))
   65|      0|        } else if let amount = self as? UInt {
   66|      0|            return ConstraintInsets(top: CGFloat(amount), left: CGFloat(amount), bottom: CGFloat(amount), right: CGFloat(amount))
   67|      0|        } else {
   68|      0|            return ConstraintInsets(top: 0, left: 0, bottom: 0, right: 0)
   69|      0|        }
   70|      0|    }
   71|       |    
   72|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintItem.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public final class ConstraintItem {
   32|       |    
   33|       |    internal weak var target: AnyObject?
   34|       |    internal let attributes: ConstraintAttributes
   35|       |    
   36|      0|    internal init(target: AnyObject?, attributes: ConstraintAttributes) {
   37|      0|        self.target = target
   38|      0|        self.attributes = attributes
   39|      0|    }
   40|       |    
   41|      0|    internal var layoutConstraintItem: LayoutConstraintItem? {
   42|      0|        return self.target as? LayoutConstraintItem
   43|      0|    }
   44|       |    
   45|       |}
   46|       |
   47|      0|public func ==(lhs: ConstraintItem, rhs: ConstraintItem) -> Bool {
   48|      0|    // pointer equality
   49|      0|    guard lhs !== rhs else {
   50|      0|        return true
   51|      0|    }
   52|      0|    
   53|      0|    // must both have valid targets and identical attributes
   54|      0|    guard let target1 = lhs.target,
   55|      0|          let target2 = rhs.target,
   56|      0|          target1 === target2 && lhs.attributes == rhs.attributes else {
   57|      0|            return false
   58|      0|    }
   59|      0|    
   60|      0|    return true
   61|      0|}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintLayoutGuide+Extensions.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#endif
   27|       |    
   28|       |    
   29|       |@available(iOS 9.0, OSX 10.11, *)
   30|       |public extension ConstraintLayoutGuide {
   31|       |    
   32|      0|    var snp: ConstraintLayoutGuideDSL {
   33|      0|        return ConstraintLayoutGuideDSL(guide: self)
   34|      0|    }
   35|       |    
   36|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintLayoutGuideDSL.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |@available(iOS 9.0, OSX 10.11, *)
   32|       |public struct ConstraintLayoutGuideDSL: ConstraintAttributesDSL {
   33|       |    
   34|       |    @discardableResult
   35|      0|    public func prepareConstraints(_ closure: (_ make: ConstraintMaker) -> Void) -> [Constraint] {
   36|      0|        return ConstraintMaker.prepareConstraints(item: self.guide, closure: closure)
   37|      0|    }
   38|       |    
   39|      0|    public func makeConstraints(_ closure: (_ make: ConstraintMaker) -> Void) {
   40|      0|        ConstraintMaker.makeConstraints(item: self.guide, closure: closure)
   41|      0|    }
   42|       |    
   43|      0|    public func remakeConstraints(_ closure: (_ make: ConstraintMaker) -> Void) {
   44|      0|        ConstraintMaker.remakeConstraints(item: self.guide, closure: closure)
   45|      0|    }
   46|       |    
   47|      0|    public func updateConstraints(_ closure: (_ make: ConstraintMaker) -> Void) {
   48|      0|        ConstraintMaker.updateConstraints(item: self.guide, closure: closure)
   49|      0|    }
   50|       |    
   51|      0|    public func removeConstraints() {
   52|      0|        ConstraintMaker.removeConstraints(item: self.guide)
   53|      0|    }
   54|       |    
   55|      0|    public var target: AnyObject? {
   56|      0|        return self.guide
   57|      0|    }
   58|       |    
   59|       |    internal let guide: ConstraintLayoutGuide
   60|       |    
   61|      0|    internal init(guide: ConstraintLayoutGuide) {
   62|      0|        self.guide = guide
   63|      0|        
   64|      0|    }
   65|       |    
   66|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintLayoutSupportDSL.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |@available(iOS 8.0, *)
   32|       |public struct ConstraintLayoutSupportDSL: ConstraintDSL {
   33|       |    
   34|      0|    public var target: AnyObject? {
   35|      0|        return self.support
   36|      0|    }
   37|       |    
   38|       |    internal let support: ConstraintLayoutSupport
   39|       |    
   40|      0|    internal init(support: ConstraintLayoutSupport) {
   41|      0|        self.support = support
   42|      0|        
   43|      0|    }
   44|       |    
   45|      0|    public var top: ConstraintItem {
   46|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.top)
   47|      0|    }
   48|       |    
   49|      0|    public var bottom: ConstraintItem {
   50|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.bottom)
   51|      0|    }
   52|       |    
   53|      0|    public var height: ConstraintItem {
   54|      0|        return ConstraintItem(target: self.target, attributes: ConstraintAttributes.height)
   55|      0|    }
   56|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintMaker.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |public class ConstraintMaker {
   31|       |    
   32|      0|    public var left: ConstraintMakerExtendable {
   33|      0|        return self.makeExtendableWithAttributes(.left)
   34|      0|    }
   35|       |    
   36|      0|    public var top: ConstraintMakerExtendable {
   37|      0|        return self.makeExtendableWithAttributes(.top)
   38|      0|    }
   39|       |    
   40|      0|    public var bottom: ConstraintMakerExtendable {
   41|      0|        return self.makeExtendableWithAttributes(.bottom)
   42|      0|    }
   43|       |    
   44|      0|    public var right: ConstraintMakerExtendable {
   45|      0|        return self.makeExtendableWithAttributes(.right)
   46|      0|    }
   47|       |    
   48|      0|    public var leading: ConstraintMakerExtendable {
   49|      0|        return self.makeExtendableWithAttributes(.leading)
   50|      0|    }
   51|       |    
   52|      0|    public var trailing: ConstraintMakerExtendable {
   53|      0|        return self.makeExtendableWithAttributes(.trailing)
   54|      0|    }
   55|       |    
   56|      0|    public var width: ConstraintMakerExtendable {
   57|      0|        return self.makeExtendableWithAttributes(.width)
   58|      0|    }
   59|       |    
   60|      0|    public var height: ConstraintMakerExtendable {
   61|      0|        return self.makeExtendableWithAttributes(.height)
   62|      0|    }
   63|       |    
   64|      0|    public var centerX: ConstraintMakerExtendable {
   65|      0|        return self.makeExtendableWithAttributes(.centerX)
   66|      0|    }
   67|       |    
   68|      0|    public var centerY: ConstraintMakerExtendable {
   69|      0|        return self.makeExtendableWithAttributes(.centerY)
   70|      0|    }
   71|       |    
   72|       |    @available(*, deprecated, message:"Use lastBaseline instead")
   73|      0|    public var baseline: ConstraintMakerExtendable {
   74|      0|        return self.makeExtendableWithAttributes(.lastBaseline)
   75|      0|    }
   76|       |    
   77|      0|    public var lastBaseline: ConstraintMakerExtendable {
   78|      0|        return self.makeExtendableWithAttributes(.lastBaseline)
   79|      0|    }
   80|       |    
   81|       |    @available(iOS 8.0, OSX 10.11, *)
   82|      0|    public var firstBaseline: ConstraintMakerExtendable {
   83|      0|        return self.makeExtendableWithAttributes(.firstBaseline)
   84|      0|    }
   85|       |    
   86|       |    @available(iOS 8.0, *)
   87|      0|    public var leftMargin: ConstraintMakerExtendable {
   88|      0|        return self.makeExtendableWithAttributes(.leftMargin)
   89|      0|    }
   90|       |    
   91|       |    @available(iOS 8.0, *)
   92|      0|    public var rightMargin: ConstraintMakerExtendable {
   93|      0|        return self.makeExtendableWithAttributes(.rightMargin)
   94|      0|    }
   95|       |    
   96|       |    @available(iOS 8.0, *)
   97|      0|    public var topMargin: ConstraintMakerExtendable {
   98|      0|        return self.makeExtendableWithAttributes(.topMargin)
   99|      0|    }
  100|       |    
  101|       |    @available(iOS 8.0, *)
  102|      0|    public var bottomMargin: ConstraintMakerExtendable {
  103|      0|        return self.makeExtendableWithAttributes(.bottomMargin)
  104|      0|    }
  105|       |    
  106|       |    @available(iOS 8.0, *)
  107|      0|    public var leadingMargin: ConstraintMakerExtendable {
  108|      0|        return self.makeExtendableWithAttributes(.leadingMargin)
  109|      0|    }
  110|       |    
  111|       |    @available(iOS 8.0, *)
  112|      0|    public var trailingMargin: ConstraintMakerExtendable {
  113|      0|        return self.makeExtendableWithAttributes(.trailingMargin)
  114|      0|    }
  115|       |    
  116|       |    @available(iOS 8.0, *)
  117|      0|    public var centerXWithinMargins: ConstraintMakerExtendable {
  118|      0|        return self.makeExtendableWithAttributes(.centerXWithinMargins)
  119|      0|    }
  120|       |    
  121|       |    @available(iOS 8.0, *)
  122|      0|    public var centerYWithinMargins: ConstraintMakerExtendable {
  123|      0|        return self.makeExtendableWithAttributes(.centerYWithinMargins)
  124|      0|    }
  125|       |    
  126|      0|    public var edges: ConstraintMakerExtendable {
  127|      0|        return self.makeExtendableWithAttributes(.edges)
  128|      0|    }
  129|      0|    public var directionalEdges: ConstraintMakerExtendable {
  130|      0|        return self.makeExtendableWithAttributes(.directionalEdges)
  131|      0|    }
  132|      0|    public var size: ConstraintMakerExtendable {
  133|      0|        return self.makeExtendableWithAttributes(.size)
  134|      0|    }
  135|      0|    public var center: ConstraintMakerExtendable {
  136|      0|        return self.makeExtendableWithAttributes(.center)
  137|      0|    }
  138|       |    
  139|       |    @available(iOS 8.0, *)
  140|      0|    public var margins: ConstraintMakerExtendable {
  141|      0|        return self.makeExtendableWithAttributes(.margins)
  142|      0|    }
  143|       |    
  144|       |    @available(iOS 8.0, *)
  145|      0|    public var directionalMargins: ConstraintMakerExtendable {
  146|      0|        return self.makeExtendableWithAttributes(.directionalMargins)
  147|      0|    }
  148|       |
  149|       |    @available(iOS 8.0, *)
  150|      0|    public var centerWithinMargins: ConstraintMakerExtendable {
  151|      0|        return self.makeExtendableWithAttributes(.centerWithinMargins)
  152|      0|    }
  153|       |    
  154|       |    private let item: LayoutConstraintItem
  155|      0|    private var descriptions = [ConstraintDescription]()
  156|       |    
  157|      0|    internal init(item: LayoutConstraintItem) {
  158|      0|        self.item = item
  159|      0|        self.item.prepare()
  160|      0|    }
  161|       |    
  162|      0|    internal func makeExtendableWithAttributes(_ attributes: ConstraintAttributes) -> ConstraintMakerExtendable {
  163|      0|        let description = ConstraintDescription(item: self.item, attributes: attributes)
  164|      0|        self.descriptions.append(description)
  165|      0|        return ConstraintMakerExtendable(description)
  166|      0|    }
  167|       |    
  168|      0|    internal static func prepareConstraints(item: LayoutConstraintItem, closure: (_ make: ConstraintMaker) -> Void) -> [Constraint] {
  169|      0|        let maker = ConstraintMaker(item: item)
  170|      0|        closure(maker)
  171|      0|        var constraints: [Constraint] = []
  172|      0|        for description in maker.descriptions {
  173|      0|            guard let constraint = description.constraint else {
  174|      0|                continue
  175|      0|            }
  176|      0|            constraints.append(constraint)
  177|      0|        }
  178|      0|        return constraints
  179|      0|    }
  180|       |    
  181|      0|    internal static func makeConstraints(item: LayoutConstraintItem, closure: (_ make: ConstraintMaker) -> Void) {
  182|      0|        let constraints = prepareConstraints(item: item, closure: closure)
  183|      0|        for constraint in constraints {
  184|      0|            constraint.activateIfNeeded(updatingExisting: false)
  185|      0|        }
  186|      0|    }
  187|       |    
  188|      0|    internal static func remakeConstraints(item: LayoutConstraintItem, closure: (_ make: ConstraintMaker) -> Void) {
  189|      0|        self.removeConstraints(item: item)
  190|      0|        self.makeConstraints(item: item, closure: closure)
  191|      0|    }
  192|       |    
  193|      0|    internal static func updateConstraints(item: LayoutConstraintItem, closure: (_ make: ConstraintMaker) -> Void) {
  194|      0|        guard item.constraints.count > 0 else {
  195|      0|            self.makeConstraints(item: item, closure: closure)
  196|      0|            return
  197|      0|        }
  198|      0|        
  199|      0|        let constraints = prepareConstraints(item: item, closure: closure)
  200|      0|        for constraint in constraints {
  201|      0|            constraint.activateIfNeeded(updatingExisting: true)
  202|      0|        }
  203|      0|    }
  204|       |    
  205|      0|    internal static func removeConstraints(item: LayoutConstraintItem) {
  206|      0|        let constraints = item.constraints
  207|      0|        for constraint in constraints {
  208|      0|            constraint.deactivateIfNeeded()
  209|      0|        }
  210|      0|    }
  211|       |    
  212|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintMakerEditable.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public class ConstraintMakerEditable: ConstraintMakerPriortizable {
   32|       |
   33|       |    @discardableResult
   34|      0|    public func multipliedBy(_ amount: ConstraintMultiplierTarget) -> ConstraintMakerEditable {
   35|      0|        self.description.multiplier = amount
   36|      0|        return self
   37|      0|    }
   38|       |    
   39|       |    @discardableResult
   40|      0|    public func dividedBy(_ amount: ConstraintMultiplierTarget) -> ConstraintMakerEditable {
   41|      0|        return self.multipliedBy(1.0 / amount.constraintMultiplierTargetValue)
   42|      0|    }
   43|       |    
   44|       |    @discardableResult
   45|      0|    public func offset(_ amount: ConstraintOffsetTarget) -> ConstraintMakerEditable {
   46|      0|        self.description.constant = amount.constraintOffsetTargetValue
   47|      0|        return self
   48|      0|    }
   49|       |    
   50|       |    @discardableResult
   51|      0|    public func inset(_ amount: ConstraintInsetTarget) -> ConstraintMakerEditable {
   52|      0|        self.description.constant = amount.constraintInsetTargetValue
   53|      0|        return self
   54|      0|    }
   55|       |    
   56|       |    #if os(iOS) || os(tvOS)
   57|       |    @discardableResult
   58|       |    @available(iOS 11.0, tvOS 11.0, *)
   59|      0|    public func inset(_ amount: ConstraintDirectionalInsetTarget) -> ConstraintMakerEditable {
   60|      0|        self.description.constant = amount.constraintDirectionalInsetTargetValue
   61|      0|        return self
   62|      0|    }
   63|       |    #endif
   64|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintMakerExtendable.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public class ConstraintMakerExtendable: ConstraintMakerRelatable {
   32|       |    
   33|      0|    public var left: ConstraintMakerExtendable {
   34|      0|        self.description.attributes += .left
   35|      0|        return self
   36|      0|    }
   37|       |    
   38|      0|    public var top: ConstraintMakerExtendable {
   39|      0|        self.description.attributes += .top
   40|      0|        return self
   41|      0|    }
   42|       |    
   43|      0|    public var bottom: ConstraintMakerExtendable {
   44|      0|        self.description.attributes += .bottom
   45|      0|        return self
   46|      0|    }
   47|       |    
   48|      0|    public var right: ConstraintMakerExtendable {
   49|      0|        self.description.attributes += .right
   50|      0|        return self
   51|      0|    }
   52|       |    
   53|      0|    public var leading: ConstraintMakerExtendable {
   54|      0|        self.description.attributes += .leading
   55|      0|        return self
   56|      0|    }
   57|       |    
   58|      0|    public var trailing: ConstraintMakerExtendable {
   59|      0|        self.description.attributes += .trailing
   60|      0|        return self
   61|      0|    }
   62|       |    
   63|      0|    public var width: ConstraintMakerExtendable {
   64|      0|        self.description.attributes += .width
   65|      0|        return self
   66|      0|    }
   67|       |    
   68|      0|    public var height: ConstraintMakerExtendable {
   69|      0|        self.description.attributes += .height
   70|      0|        return self
   71|      0|    }
   72|       |    
   73|      0|    public var centerX: ConstraintMakerExtendable {
   74|      0|        self.description.attributes += .centerX
   75|      0|        return self
   76|      0|    }
   77|       |    
   78|      0|    public var centerY: ConstraintMakerExtendable {
   79|      0|        self.description.attributes += .centerY
   80|      0|        return self
   81|      0|    }
   82|       |    
   83|       |    @available(*, deprecated, message:"Use lastBaseline instead")
   84|      0|    public var baseline: ConstraintMakerExtendable {
   85|      0|        self.description.attributes += .lastBaseline
   86|      0|        return self
   87|      0|    }
   88|       |    
   89|      0|    public var lastBaseline: ConstraintMakerExtendable {
   90|      0|        self.description.attributes += .lastBaseline
   91|      0|        return self
   92|      0|    }
   93|       |    
   94|       |    @available(iOS 8.0, OSX 10.11, *)
   95|      0|    public var firstBaseline: ConstraintMakerExtendable {
   96|      0|        self.description.attributes += .firstBaseline
   97|      0|        return self
   98|      0|    }
   99|       |    
  100|       |    @available(iOS 8.0, *)
  101|      0|    public var leftMargin: ConstraintMakerExtendable {
  102|      0|        self.description.attributes += .leftMargin
  103|      0|        return self
  104|      0|    }
  105|       |    
  106|       |    @available(iOS 8.0, *)
  107|      0|    public var rightMargin: ConstraintMakerExtendable {
  108|      0|        self.description.attributes += .rightMargin
  109|      0|        return self
  110|      0|    }
  111|       |    
  112|       |    @available(iOS 8.0, *)
  113|      0|    public var topMargin: ConstraintMakerExtendable {
  114|      0|        self.description.attributes += .topMargin
  115|      0|        return self
  116|      0|    }
  117|       |    
  118|       |    @available(iOS 8.0, *)
  119|      0|    public var bottomMargin: ConstraintMakerExtendable {
  120|      0|        self.description.attributes += .bottomMargin
  121|      0|        return self
  122|      0|    }
  123|       |    
  124|       |    @available(iOS 8.0, *)
  125|      0|    public var leadingMargin: ConstraintMakerExtendable {
  126|      0|        self.description.attributes += .leadingMargin
  127|      0|        return self
  128|      0|    }
  129|       |    
  130|       |    @available(iOS 8.0, *)
  131|      0|    public var trailingMargin: ConstraintMakerExtendable {
  132|      0|        self.description.attributes += .trailingMargin
  133|      0|        return self
  134|      0|    }
  135|       |    
  136|       |    @available(iOS 8.0, *)
  137|      0|    public var centerXWithinMargins: ConstraintMakerExtendable {
  138|      0|        self.description.attributes += .centerXWithinMargins
  139|      0|        return self
  140|      0|    }
  141|       |    
  142|       |    @available(iOS 8.0, *)
  143|      0|    public var centerYWithinMargins: ConstraintMakerExtendable {
  144|      0|        self.description.attributes += .centerYWithinMargins
  145|      0|        return self
  146|      0|    }
  147|       |    
  148|      0|    public var edges: ConstraintMakerExtendable {
  149|      0|        self.description.attributes += .edges
  150|      0|        return self
  151|      0|    }
  152|      0|    public var directionalEdges: ConstraintMakerExtendable {
  153|      0|        self.description.attributes += .directionalEdges
  154|      0|        return self
  155|      0|    }
  156|      0|    public var size: ConstraintMakerExtendable {
  157|      0|        self.description.attributes += .size
  158|      0|        return self
  159|      0|    }
  160|       |    
  161|       |    @available(iOS 8.0, *)
  162|      0|    public var margins: ConstraintMakerExtendable {
  163|      0|        self.description.attributes += .margins
  164|      0|        return self
  165|      0|    }
  166|       |    
  167|       |    @available(iOS 8.0, *)
  168|      0|    public var directionalMargins: ConstraintMakerExtendable {
  169|      0|      self.description.attributes += .directionalMargins
  170|      0|      return self
  171|      0|    }
  172|       |
  173|       |    @available(iOS 8.0, *)
  174|      0|    public var centerWithinMargins: ConstraintMakerExtendable {
  175|      0|        self.description.attributes += .centerWithinMargins
  176|      0|        return self
  177|      0|    }
  178|       |    
  179|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintMakerFinalizable.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public class ConstraintMakerFinalizable {
   32|       |    
   33|       |    internal let description: ConstraintDescription
   34|       |    
   35|      0|    internal init(_ description: ConstraintDescription) {
   36|      0|        self.description = description
   37|      0|    }
   38|       |    
   39|       |    @discardableResult
   40|      0|    public func labeled(_ label: String) -> ConstraintMakerFinalizable {
   41|      0|        self.description.label = label
   42|      0|        return self
   43|      0|    }
   44|       |    
   45|      0|    public var constraint: Constraint {
   46|      0|        return self.description.constraint!
   47|      0|    }
   48|       |    
   49|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintMakerPriortizable.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public class ConstraintMakerPriortizable: ConstraintMakerFinalizable {
   32|       |    
   33|       |    @discardableResult
   34|      0|    public func priority(_ amount: ConstraintPriority) -> ConstraintMakerFinalizable {
   35|      0|        self.description.priority = amount.value
   36|      0|        return self
   37|      0|    }
   38|       |    
   39|       |    @discardableResult
   40|      0|    public func priority(_ amount: ConstraintPriorityTarget) -> ConstraintMakerFinalizable {
   41|      0|        self.description.priority = amount
   42|      0|        return self
   43|      0|    }
   44|       |    
   45|       |    @available(*, deprecated, message:"Use priority(.required) instead.")
   46|       |    @discardableResult
   47|      0|    public func priorityRequired() -> ConstraintMakerFinalizable {
   48|      0|        return self.priority(.required)
   49|      0|    }
   50|       |    
   51|       |    @available(*, deprecated, message:"Use priority(.high) instead.")
   52|       |    @discardableResult
   53|      0|    public func priorityHigh() -> ConstraintMakerFinalizable {
   54|      0|        return self.priority(.high)
   55|      0|    }
   56|       |    
   57|       |    @available(*, deprecated, message:"Use priority(.medium) instead.")
   58|       |    @discardableResult
   59|      0|    public func priorityMedium() -> ConstraintMakerFinalizable {
   60|      0|        return self.priority(.medium)
   61|      0|    }
   62|       |    
   63|       |    @available(*, deprecated, message:"Use priority(.low) instead.")
   64|       |    @discardableResult
   65|      0|    public func priorityLow() -> ConstraintMakerFinalizable {
   66|      0|        return self.priority(.low)
   67|      0|    }
   68|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintMakerRelatable.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public class ConstraintMakerRelatable {
   32|       |    
   33|       |    internal let description: ConstraintDescription
   34|       |    
   35|      0|    internal init(_ description: ConstraintDescription) {
   36|      0|        self.description = description
   37|      0|    }
   38|       |    
   39|      0|    internal func relatedTo(_ other: ConstraintRelatableTarget, relation: ConstraintRelation, file: String, line: UInt) -> ConstraintMakerEditable {
   40|      0|        let related: ConstraintItem
   41|      0|        let constant: ConstraintConstantTarget
   42|      0|        
   43|      0|        if let other = other as? ConstraintItem {
   44|      0|            guard other.attributes == ConstraintAttributes.none ||
   45|      0|                  other.attributes.layoutAttributes.count <= 1 ||
   46|      0|                  other.attributes.layoutAttributes == self.description.attributes.layoutAttributes ||
   47|      0|                  other.attributes == .edges && self.description.attributes == .margins ||
   48|      0|                  other.attributes == .margins && self.description.attributes == .edges ||
   49|      0|                  other.attributes == .directionalEdges && self.description.attributes == .directionalMargins ||
   50|      0|                  other.attributes == .directionalMargins && self.description.attributes == .directionalEdges else {
   51|      0|                fatalError("Cannot constraint to multiple non identical attributes. (\(file), \(line))");
   52|      0|            }
   53|      0|            
   54|      0|            related = other
   55|      0|            constant = 0.0
   56|      0|        } else if let other = other as? ConstraintView {
   57|      0|            related = ConstraintItem(target: other, attributes: ConstraintAttributes.none)
   58|      0|            constant = 0.0
   59|      0|        } else if let other = other as? ConstraintConstantTarget {
   60|      0|            related = ConstraintItem(target: nil, attributes: ConstraintAttributes.none)
   61|      0|            constant = other
   62|      0|        } else if #available(iOS 9.0, OSX 10.11, *), let other = other as? ConstraintLayoutGuide {
   63|      0|            related = ConstraintItem(target: other, attributes: ConstraintAttributes.none)
   64|      0|            constant = 0.0
   65|      0|        } else {
   66|      0|            fatalError("Invalid constraint. (\(file), \(line))")
   67|      0|        }
   68|      0|        
   69|      0|        let editable = ConstraintMakerEditable(self.description)
   70|      0|        editable.description.sourceLocation = (file, line)
   71|      0|        editable.description.relation = relation
   72|      0|        editable.description.related = related
   73|      0|        editable.description.constant = constant
   74|      0|        return editable
   75|      0|    }
   76|       |    
   77|       |    @discardableResult
   78|      0|    public func equalTo(_ other: ConstraintRelatableTarget, _ file: String = #file, _ line: UInt = #line) -> ConstraintMakerEditable {
   79|      0|        return self.relatedTo(other, relation: .equal, file: file, line: line)
   80|      0|    }
   81|       |    
   82|       |    @discardableResult
   83|      0|    public func equalToSuperview(_ file: String = #file, _ line: UInt = #line) -> ConstraintMakerEditable {
   84|      0|        guard let other = self.description.item.superview else {
   85|      0|            fatalError("Expected superview but found nil when attempting make constraint `equalToSuperview`.")
   86|      0|        }
   87|      0|        return self.relatedTo(other, relation: .equal, file: file, line: line)
   88|      0|    }
   89|       |    
   90|       |    @discardableResult
   91|      0|    public func lessThanOrEqualTo(_ other: ConstraintRelatableTarget, _ file: String = #file, _ line: UInt = #line) -> ConstraintMakerEditable {
   92|      0|        return self.relatedTo(other, relation: .lessThanOrEqual, file: file, line: line)
   93|      0|    }
   94|       |    
   95|       |    @discardableResult
   96|      0|    public func lessThanOrEqualToSuperview(_ file: String = #file, _ line: UInt = #line) -> ConstraintMakerEditable {
   97|      0|        guard let other = self.description.item.superview else {
   98|      0|            fatalError("Expected superview but found nil when attempting make constraint `lessThanOrEqualToSuperview`.")
   99|      0|        }
  100|      0|        return self.relatedTo(other, relation: .lessThanOrEqual, file: file, line: line)
  101|      0|    }
  102|       |    
  103|       |    @discardableResult
  104|      0|    public func greaterThanOrEqualTo(_ other: ConstraintRelatableTarget, _ file: String = #file, line: UInt = #line) -> ConstraintMakerEditable {
  105|      0|        return self.relatedTo(other, relation: .greaterThanOrEqual, file: file, line: line)
  106|      0|    }
  107|       |    
  108|       |    @discardableResult
  109|      0|    public func greaterThanOrEqualToSuperview(_ file: String = #file, line: UInt = #line) -> ConstraintMakerEditable {
  110|      0|        guard let other = self.description.item.superview else {
  111|      0|            fatalError("Expected superview but found nil when attempting make constraint `greaterThanOrEqualToSuperview`.")
  112|      0|        }
  113|      0|        return self.relatedTo(other, relation: .greaterThanOrEqual, file: file, line: line)
  114|      0|    }
  115|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintMultiplierTarget.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public protocol ConstraintMultiplierTarget {
   32|       |    
   33|       |    var constraintMultiplierTargetValue: CGFloat { get }
   34|       |    
   35|       |}
   36|       |
   37|       |extension Int: ConstraintMultiplierTarget {
   38|       |    
   39|      0|    public var constraintMultiplierTargetValue: CGFloat {
   40|      0|        return CGFloat(self)
   41|      0|    }
   42|       |    
   43|       |}
   44|       |
   45|       |extension UInt: ConstraintMultiplierTarget {
   46|       |    
   47|      0|    public var constraintMultiplierTargetValue: CGFloat {
   48|      0|        return CGFloat(self)
   49|      0|    }
   50|       |    
   51|       |}
   52|       |
   53|       |extension Float: ConstraintMultiplierTarget {
   54|       |    
   55|      0|    public var constraintMultiplierTargetValue: CGFloat {
   56|      0|        return CGFloat(self)
   57|      0|    }
   58|       |    
   59|       |}
   60|       |
   61|       |extension Double: ConstraintMultiplierTarget {
   62|       |    
   63|      0|    public var constraintMultiplierTargetValue: CGFloat {
   64|      0|        return CGFloat(self)
   65|      0|    }
   66|       |    
   67|       |}
   68|       |
   69|       |extension CGFloat: ConstraintMultiplierTarget {
   70|       |    
   71|      0|    public var constraintMultiplierTargetValue: CGFloat {
   72|      0|        return self
   73|      0|    }
   74|       |    
   75|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintOffsetTarget.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public protocol ConstraintOffsetTarget: ConstraintConstantTarget {
   32|       |}
   33|       |
   34|       |extension Int: ConstraintOffsetTarget {
   35|       |}
   36|       |
   37|       |extension UInt: ConstraintOffsetTarget {
   38|       |}
   39|       |
   40|       |extension Float: ConstraintOffsetTarget {
   41|       |}
   42|       |
   43|       |extension Double: ConstraintOffsetTarget {
   44|       |}
   45|       |
   46|       |extension CGFloat: ConstraintOffsetTarget {
   47|       |}
   48|       |
   49|       |extension ConstraintOffsetTarget {
   50|       |    
   51|      0|    internal var constraintOffsetTargetValue: CGFloat {
   52|      0|        let offset: CGFloat
   53|      0|        if let amount = self as? Float {
   54|      0|            offset = CGFloat(amount)
   55|      0|        } else if let amount = self as? Double {
   56|      0|            offset = CGFloat(amount)
   57|      0|        } else if let amount = self as? CGFloat {
   58|      0|            offset = CGFloat(amount)
   59|      0|        } else if let amount = self as? Int {
   60|      0|            offset = CGFloat(amount)
   61|      0|        } else if let amount = self as? UInt {
   62|      0|            offset = CGFloat(amount)
   63|      0|        } else {
   64|      0|            offset = 0.0
   65|      0|        }
   66|      0|        return offset
   67|      0|    }
   68|       |    
   69|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintPriority.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |public struct ConstraintPriority : ExpressibleByFloatLiteral, Equatable, Strideable {
   31|       |    public typealias FloatLiteralType = Float
   32|       |    
   33|       |    public let value: Float
   34|       |    
   35|      0|    public init(floatLiteral value: Float) {
   36|      0|        self.value = value
   37|      0|    }
   38|       |    
   39|      0|    public init(_ value: Float) {
   40|      0|        self.value = value
   41|      0|    }
   42|       |    
   43|      0|    public static var required: ConstraintPriority {
   44|      0|        return 1000.0
   45|      0|    }
   46|       |    
   47|      0|    public static var high: ConstraintPriority {
   48|      0|        return 750.0
   49|      0|    }
   50|       |    
   51|      0|    public static var medium: ConstraintPriority {
   52|      0|        #if os(OSX)
   53|      0|            return 501.0
   54|      0|        #else
   55|      0|            return 500.0
   56|      0|        #endif
   57|      0|        
   58|      0|    }
   59|       |    
   60|      0|    public static var low: ConstraintPriority {
   61|      0|        return 250.0
   62|      0|    }
   63|       |    
   64|      0|    public static func ==(lhs: ConstraintPriority, rhs: ConstraintPriority) -> Bool {
   65|      0|        return lhs.value == rhs.value
   66|      0|    }
   67|       |
   68|       |    // MARK: Strideable
   69|       |
   70|      0|    public func advanced(by n: FloatLiteralType) -> ConstraintPriority {
   71|      0|        return ConstraintPriority(floatLiteral: value + n)
   72|      0|    }
   73|       |
   74|      0|    public func distance(to other: ConstraintPriority) -> FloatLiteralType {
   75|      0|        return other.value - value
   76|      0|    }
   77|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintPriorityTarget.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public protocol ConstraintPriorityTarget {
   32|       |    
   33|       |    var constraintPriorityTargetValue: Float { get }
   34|       |    
   35|       |}
   36|       |
   37|       |extension Int: ConstraintPriorityTarget {
   38|       |    
   39|      0|    public var constraintPriorityTargetValue: Float {
   40|      0|        return Float(self)
   41|      0|    }
   42|       |    
   43|       |}
   44|       |
   45|       |extension UInt: ConstraintPriorityTarget {
   46|       |    
   47|      0|    public var constraintPriorityTargetValue: Float {
   48|      0|        return Float(self)
   49|      0|    }
   50|       |    
   51|       |}
   52|       |
   53|       |extension Float: ConstraintPriorityTarget {
   54|       |    
   55|      0|    public var constraintPriorityTargetValue: Float {
   56|      0|        return self
   57|      0|    }
   58|       |    
   59|       |}
   60|       |
   61|       |extension Double: ConstraintPriorityTarget {
   62|       |    
   63|      0|    public var constraintPriorityTargetValue: Float {
   64|      0|        return Float(self)
   65|      0|    }
   66|       |    
   67|       |}
   68|       |
   69|       |extension CGFloat: ConstraintPriorityTarget {
   70|       |    
   71|      0|    public var constraintPriorityTargetValue: Float {
   72|      0|        return Float(self)
   73|      0|    }
   74|       |    
   75|       |}
   76|       |
   77|       |#if os(iOS) || os(tvOS)
   78|       |extension UILayoutPriority: ConstraintPriorityTarget {
   79|       |
   80|      0|    public var constraintPriorityTargetValue: Float {
   81|      0|        return self.rawValue
   82|      0|    }
   83|       |
   84|       |}
   85|       |#endif

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintRelation.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |internal enum ConstraintRelation : Int {
   32|       |    case equal = 1
   33|       |    case lessThanOrEqual
   34|       |    case greaterThanOrEqual
   35|       |    
   36|       |    internal var layoutRelation: LayoutRelation {
   37|      0|        get {
   38|      0|            switch(self) {
   39|      0|            case .equal:
   40|      0|                return .equal
   41|      0|            case .lessThanOrEqual:
   42|      0|                return .lessThanOrEqual
   43|      0|            case .greaterThanOrEqual:
   44|      0|                return .greaterThanOrEqual
   45|      0|            }
   46|      0|        }
   47|       |    }
   48|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintView+Extensions.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public extension ConstraintView {
   32|       |    
   33|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   34|      0|    var snp_left: ConstraintItem { return self.snp.left }
   35|       |    
   36|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   37|      0|    var snp_top: ConstraintItem { return self.snp.top }
   38|       |    
   39|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   40|      0|    var snp_right: ConstraintItem { return self.snp.right }
   41|       |    
   42|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   43|      0|    var snp_bottom: ConstraintItem { return self.snp.bottom }
   44|       |    
   45|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   46|      0|    var snp_leading: ConstraintItem { return self.snp.leading }
   47|       |    
   48|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   49|      0|    var snp_trailing: ConstraintItem { return self.snp.trailing }
   50|       |    
   51|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   52|      0|    var snp_width: ConstraintItem { return self.snp.width }
   53|       |    
   54|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   55|      0|    var snp_height: ConstraintItem { return self.snp.height }
   56|       |    
   57|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   58|      0|    var snp_centerX: ConstraintItem { return self.snp.centerX }
   59|       |    
   60|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   61|      0|    var snp_centerY: ConstraintItem { return self.snp.centerY }
   62|       |    
   63|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   64|      0|    var snp_baseline: ConstraintItem { return self.snp.baseline }
   65|       |    
   66|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
   67|       |    @available(iOS 8.0, OSX 10.11, *)
   68|      0|    var snp_lastBaseline: ConstraintItem { return self.snp.lastBaseline }
   69|       |    
   70|       |    @available(iOS, deprecated, message:"Use newer snp.* syntax.")
   71|       |    @available(iOS 8.0, OSX 10.11, *)
   72|      0|    var snp_firstBaseline: ConstraintItem { return self.snp.firstBaseline }
   73|       |    
   74|       |    @available(iOS, deprecated, message:"Use newer snp.* syntax.")
   75|       |    @available(iOS 8.0, *)
   76|      0|    var snp_leftMargin: ConstraintItem { return self.snp.leftMargin }
   77|       |    
   78|       |    @available(iOS, deprecated, message:"Use newer snp.* syntax.")
   79|       |    @available(iOS 8.0, *)
   80|      0|    var snp_topMargin: ConstraintItem { return self.snp.topMargin }
   81|       |    
   82|       |    @available(iOS, deprecated, message:"Use newer snp.* syntax.")
   83|       |    @available(iOS 8.0, *)
   84|      0|    var snp_rightMargin: ConstraintItem { return self.snp.rightMargin }
   85|       |    
   86|       |    @available(iOS, deprecated, message:"Use newer snp.* syntax.")
   87|       |    @available(iOS 8.0, *)
   88|      0|    var snp_bottomMargin: ConstraintItem { return self.snp.bottomMargin }
   89|       |    
   90|       |    @available(iOS, deprecated, message:"Use newer snp.* syntax.")
   91|       |    @available(iOS 8.0, *)
   92|      0|    var snp_leadingMargin: ConstraintItem { return self.snp.leadingMargin }
   93|       |    
   94|       |    @available(iOS, deprecated, message:"Use newer snp.* syntax.")
   95|       |    @available(iOS 8.0, *)
   96|      0|    var snp_trailingMargin: ConstraintItem { return self.snp.trailingMargin }
   97|       |    
   98|       |    @available(iOS, deprecated, message:"Use newer snp.* syntax.")
   99|       |    @available(iOS 8.0, *)
  100|      0|    var snp_centerXWithinMargins: ConstraintItem { return self.snp.centerXWithinMargins }
  101|       |    
  102|       |    @available(iOS, deprecated, message:"Use newer snp.* syntax.")
  103|       |    @available(iOS 8.0, *)
  104|      0|    var snp_centerYWithinMargins: ConstraintItem { return self.snp.centerYWithinMargins }
  105|       |    
  106|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
  107|      0|    var snp_edges: ConstraintItem { return self.snp.edges }
  108|       |    
  109|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
  110|      0|    var snp_size: ConstraintItem { return self.snp.size }
  111|       |    
  112|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
  113|      0|    var snp_center: ConstraintItem { return self.snp.center }
  114|       |    
  115|       |    @available(iOS, deprecated, message:"Use newer snp.* syntax.")
  116|       |    @available(iOS 8.0, *)
  117|      0|    var snp_margins: ConstraintItem { return self.snp.margins }
  118|       |    
  119|       |    @available(iOS, deprecated, message:"Use newer snp.* syntax.")
  120|       |    @available(iOS 8.0, *)
  121|      0|    var snp_centerWithinMargins: ConstraintItem { return self.snp.centerWithinMargins }
  122|       |    
  123|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
  124|      0|    func snp_prepareConstraints(_ closure: (_ make: ConstraintMaker) -> Void) -> [Constraint] {
  125|      0|        return self.snp.prepareConstraints(closure)
  126|      0|    }
  127|       |    
  128|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
  129|      0|    func snp_makeConstraints(_ closure: (_ make: ConstraintMaker) -> Void) {
  130|      0|        self.snp.makeConstraints(closure)
  131|      0|    }
  132|       |    
  133|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
  134|      0|    func snp_remakeConstraints(_ closure: (_ make: ConstraintMaker) -> Void) {
  135|      0|        self.snp.remakeConstraints(closure)
  136|      0|    }
  137|       |    
  138|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
  139|      0|    func snp_updateConstraints(_ closure: (_ make: ConstraintMaker) -> Void) {
  140|      0|        self.snp.updateConstraints(closure)
  141|      0|    }
  142|       |    
  143|       |    @available(*, deprecated, message:"Use newer snp.* syntax.")
  144|      0|    func snp_removeConstraints() {
  145|      0|        self.snp.removeConstraints()
  146|      0|    }
  147|       |    
  148|      0|    var snp: ConstraintViewDSL {
  149|      0|        return ConstraintViewDSL(view: self)
  150|      0|    }
  151|       |    
  152|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/ConstraintViewDSL.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public struct ConstraintViewDSL: ConstraintAttributesDSL {
   32|       |    
   33|       |    @discardableResult
   34|      0|    public func prepareConstraints(_ closure: (_ make: ConstraintMaker) -> Void) -> [Constraint] {
   35|      0|        return ConstraintMaker.prepareConstraints(item: self.view, closure: closure)
   36|      0|    }
   37|       |    
   38|      0|    public func makeConstraints(_ closure: (_ make: ConstraintMaker) -> Void) {
   39|      0|        ConstraintMaker.makeConstraints(item: self.view, closure: closure)
   40|      0|    }
   41|       |    
   42|      0|    public func remakeConstraints(_ closure: (_ make: ConstraintMaker) -> Void) {
   43|      0|        ConstraintMaker.remakeConstraints(item: self.view, closure: closure)
   44|      0|    }
   45|       |    
   46|      0|    public func updateConstraints(_ closure: (_ make: ConstraintMaker) -> Void) {
   47|      0|        ConstraintMaker.updateConstraints(item: self.view, closure: closure)
   48|      0|    }
   49|       |    
   50|      0|    public func removeConstraints() {
   51|      0|        ConstraintMaker.removeConstraints(item: self.view)
   52|      0|    }
   53|       |    
   54|       |    public var contentHuggingHorizontalPriority: Float {
   55|      0|        get {
   56|      0|            return self.view.contentHuggingPriority(for: .horizontal).rawValue
   57|      0|        }
   58|      0|        nonmutating set {
   59|      0|            self.view.setContentHuggingPriority(LayoutPriority(rawValue: newValue), for: .horizontal)
   60|      0|        }
   61|       |    }
   62|       |    
   63|       |    public var contentHuggingVerticalPriority: Float {
   64|      0|        get {
   65|      0|            return self.view.contentHuggingPriority(for: .vertical).rawValue
   66|      0|        }
   67|      0|        nonmutating set {
   68|      0|            self.view.setContentHuggingPriority(LayoutPriority(rawValue: newValue), for: .vertical)
   69|      0|        }
   70|       |    }
   71|       |    
   72|       |    public var contentCompressionResistanceHorizontalPriority: Float {
   73|      0|        get {
   74|      0|            return self.view.contentCompressionResistancePriority(for: .horizontal).rawValue
   75|      0|        }
   76|      0|        nonmutating set {
   77|      0|            self.view.setContentCompressionResistancePriority(LayoutPriority(rawValue: newValue), for: .horizontal)
   78|      0|        }
   79|       |    }
   80|       |    
   81|       |    public var contentCompressionResistanceVerticalPriority: Float {
   82|      0|        get {
   83|      0|            return self.view.contentCompressionResistancePriority(for: .vertical).rawValue
   84|      0|        }
   85|      0|        nonmutating set {
   86|      0|            self.view.setContentCompressionResistancePriority(LayoutPriority(rawValue: newValue), for: .vertical)
   87|      0|        }
   88|       |    }
   89|       |    
   90|      0|    public var target: AnyObject? {
   91|      0|        return self.view
   92|      0|    }
   93|       |    
   94|       |    internal let view: ConstraintView
   95|       |    
   96|      0|    internal init(view: ConstraintView) {
   97|      0|        self.view = view
   98|      0|        
   99|      0|    }
  100|       |    
  101|       |}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/Debugging.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |public extension LayoutConstraint {
   31|       |    
   32|      0|    override var description: String {
   33|      0|        var description = "<"
   34|      0|        
   35|      0|        description += descriptionForObject(self)
   36|      0|        
   37|      0|        if let firstItem = conditionalOptional(from: self.firstItem) {
   38|      0|            description += " \(descriptionForObject(firstItem))"
   39|      0|        }
   40|      0|        
   41|      0|        if self.firstAttribute != .notAnAttribute {
   42|      0|            description += ".\(descriptionForAttribute(self.firstAttribute))"
   43|      0|        }
   44|      0|        
   45|      0|        description += " \(descriptionForRelation(self.relation))"
   46|      0|        
   47|      0|        if let secondItem = self.secondItem {
   48|      0|            description += " \(descriptionForObject(secondItem))"
   49|      0|        }
   50|      0|        
   51|      0|        if self.secondAttribute != .notAnAttribute {
   52|      0|            description += ".\(descriptionForAttribute(self.secondAttribute))"
   53|      0|        }
   54|      0|        
   55|      0|        if self.multiplier != 1.0 {
   56|      0|            description += " * \(self.multiplier)"
   57|      0|        }
   58|      0|        
   59|      0|        if self.secondAttribute == .notAnAttribute {
   60|      0|            description += " \(self.constant)"
   61|      0|        } else {
   62|      0|            if self.constant > 0.0 {
   63|      0|                description += " + \(self.constant)"
   64|      0|            } else if self.constant < 0.0 {
   65|      0|                description += " - \(abs(self.constant))"
   66|      0|            }
   67|      0|        }
   68|      0|        
   69|      0|        if self.priority.rawValue != 1000.0 {
   70|      0|            description += " ^\(self.priority)"
   71|      0|        }
   72|      0|        
   73|      0|        description += ">"
   74|      0|        
   75|      0|        return description
   76|      0|    }
   77|       |    
   78|       |}
   79|       |
   80|      0|private func descriptionForRelation(_ relation: LayoutRelation) -> String {
   81|      0|    switch relation {
   82|      0|    case .equal:                return "=="
   83|      0|    case .greaterThanOrEqual:   return ">="
   84|      0|    case .lessThanOrEqual:      return "<="
   85|      0|    #if swift(>=5.0)
   86|      0|    @unknown default:           return "unknown"
   87|      0|    #endif
   88|      0|    }
   89|      0|}
   90|       |
   91|      0|private func descriptionForAttribute(_ attribute: LayoutAttribute) -> String {
   92|      0|    #if os(iOS) || os(tvOS)
   93|      0|        switch attribute {
   94|      0|        case .notAnAttribute:       return "notAnAttribute"
   95|      0|        case .top:                  return "top"
   96|      0|        case .left:                 return "left"
   97|      0|        case .bottom:               return "bottom"
   98|      0|        case .right:                return "right"
   99|      0|        case .leading:              return "leading"
  100|      0|        case .trailing:             return "trailing"
  101|      0|        case .width:                return "width"
  102|      0|        case .height:               return "height"
  103|      0|        case .centerX:              return "centerX"
  104|      0|        case .centerY:              return "centerY"
  105|      0|        case .lastBaseline:         return "lastBaseline"
  106|      0|        case .firstBaseline:        return "firstBaseline"
  107|      0|        case .topMargin:            return "topMargin"
  108|      0|        case .leftMargin:           return "leftMargin"
  109|      0|        case .bottomMargin:         return "bottomMargin"
  110|      0|        case .rightMargin:          return "rightMargin"
  111|      0|        case .leadingMargin:        return "leadingMargin"
  112|      0|        case .trailingMargin:       return "trailingMargin"
  113|      0|        case .centerXWithinMargins: return "centerXWithinMargins"
  114|      0|        case .centerYWithinMargins: return "centerYWithinMargins"
  115|      0|        #if swift(>=5.0)
  116|      0|        @unknown default:           return "unknown"
  117|      0|        #endif
  118|      0|    }
  119|      0|    #else
  120|      0|        switch attribute {
  121|      0|        case .notAnAttribute:       return "notAnAttribute"
  122|      0|        case .top:                  return "top"
  123|      0|        case .left:                 return "left"
  124|      0|        case .bottom:               return "bottom"
  125|      0|        case .right:                return "right"
  126|      0|        case .leading:              return "leading"
  127|      0|        case .trailing:             return "trailing"
  128|      0|        case .width:                return "width"
  129|      0|        case .height:               return "height"
  130|      0|        case .centerX:              return "centerX"
  131|      0|        case .centerY:              return "centerY"
  132|      0|        case .lastBaseline:         return "lastBaseline"
  133|      0|        case .firstBaseline:        return "firstBaseline"
  134|      0|        #if swift(>=5.0)
  135|      0|        @unknown default:           return "unknown"
  136|      0|        #endif
  137|      0|    }
  138|      0|    #endif
  139|      0|}
  140|       |
  141|      0|private func conditionalOptional<T>(from object: Optional<T>) -> Optional<T> {
  142|      0|    return object
  143|      0|}
  144|       |
  145|      0|private func conditionalOptional<T>(from object: T) -> Optional<T> {
  146|      0|    return Optional.some(object)
  147|      0|}
  148|       |
  149|      0|private func descriptionForObject(_ object: AnyObject) -> String {
  150|      0|    let pointerDescription = String(format: "%p", UInt(bitPattern: ObjectIdentifier(object)))
  151|      0|    var desc = ""
  152|      0|    
  153|      0|    desc += type(of: object).description()
  154|      0|    
  155|      0|    if let object = object as? ConstraintView {
  156|      0|        desc += ":\(object.snp.label() ?? pointerDescription)"
  157|      0|    } else if let object = object as? LayoutConstraint {
  158|      0|        desc += ":\(object.label ?? pointerDescription)"
  159|      0|    } else {
  160|      0|        desc += ":\(pointerDescription)"
  161|      0|    }
  162|      0|    
  163|      0|    if let object = object as? LayoutConstraint, let file = object.constraint?.sourceLocation.0, let line = object.constraint?.sourceLocation.1 {
  164|      0|        desc += "@\((file as NSString).lastPathComponent)#\(line)"
  165|      0|    }
  166|      0|    
  167|      0|    desc += ""
  168|      0|    return desc
  169|      0|}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/LayoutConstraint.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public class LayoutConstraint : NSLayoutConstraint {
   32|       |    
   33|       |    public var label: String? {
   34|      0|        get {
   35|      0|            return self.identifier
   36|      0|        }
   37|      0|        set {
   38|      0|            self.identifier = newValue
   39|      0|        }
   40|       |    }
   41|       |    
   42|       |    internal weak var constraint: Constraint? = nil
   43|       |    
   44|       |}
   45|       |
   46|      0|internal func ==(lhs: LayoutConstraint, rhs: LayoutConstraint) -> Bool {
   47|      0|    // If firstItem or secondItem on either constraint has a dangling pointer
   48|      0|    // this comparison can cause a crash. The solution for this is to ensure
   49|      0|    // your layout code hold strong references to things like Views, LayoutGuides
   50|      0|    // and LayoutAnchors as SnapKit will not keep strong references to any of these.
   51|      0|    guard lhs.firstAttribute == rhs.firstAttribute &&
   52|      0|          lhs.secondAttribute == rhs.secondAttribute &&
   53|      0|          lhs.relation == rhs.relation &&
   54|      0|          lhs.priority == rhs.priority &&
   55|      0|          lhs.multiplier == rhs.multiplier &&
   56|      0|          lhs.secondItem === rhs.secondItem &&
   57|      0|          lhs.firstItem === rhs.firstItem else {
   58|      0|        return false
   59|      0|    }
   60|      0|    return true
   61|      0|}

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/LayoutConstraintItem.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#else
   27|       |    import AppKit
   28|       |#endif
   29|       |
   30|       |
   31|       |public protocol LayoutConstraintItem: class {
   32|       |}
   33|       |
   34|       |@available(iOS 9.0, OSX 10.11, *)
   35|       |extension ConstraintLayoutGuide : LayoutConstraintItem {
   36|       |}
   37|       |
   38|       |extension ConstraintView : LayoutConstraintItem {
   39|       |}
   40|       |
   41|       |
   42|       |extension LayoutConstraintItem {
   43|       |    
   44|      0|    internal func prepare() {
   45|      0|        if let view = self as? ConstraintView {
   46|      0|            view.translatesAutoresizingMaskIntoConstraints = false
   47|      0|        }
   48|      0|    }
   49|       |    
   50|      0|    internal var superview: ConstraintView? {
   51|      0|        if let view = self as? ConstraintView {
   52|      0|            return view.superview
   53|      0|        }
   54|      0|        
   55|      0|        if #available(iOS 9.0, OSX 10.11, *), let guide = self as? ConstraintLayoutGuide {
   56|      0|            return guide.owningView
   57|      0|        }
   58|      0|        
   59|      0|        return nil
   60|      0|    }
   61|      0|    internal var constraints: [Constraint] {
   62|      0|        return self.constraintsSet.allObjects as! [Constraint]
   63|      0|    }
   64|       |    
   65|      0|    internal func add(constraints: [Constraint]) {
   66|      0|        let constraintsSet = self.constraintsSet
   67|      0|        for constraint in constraints {
   68|      0|            constraintsSet.add(constraint)
   69|      0|        }
   70|      0|    }
   71|       |    
   72|      0|    internal func remove(constraints: [Constraint]) {
   73|      0|        let constraintsSet = self.constraintsSet
   74|      0|        for constraint in constraints {
   75|      0|            constraintsSet.remove(constraint)
   76|      0|        }
   77|      0|    }
   78|       |    
   79|      0|    private var constraintsSet: NSMutableSet {
   80|      0|        let constraintsSet: NSMutableSet
   81|      0|        
   82|      0|        if let existing = objc_getAssociatedObject(self, &constraintsKey) as? NSMutableSet {
   83|      0|            constraintsSet = existing
   84|      0|        } else {
   85|      0|            constraintsSet = NSMutableSet()
   86|      0|            objc_setAssociatedObject(self, &constraintsKey, constraintsSet, .OBJC_ASSOCIATION_RETAIN_NONATOMIC)
   87|      0|        }
   88|      0|        return constraintsSet
   89|      0|        
   90|      0|    }
   91|       |    
   92|       |}
   93|       |private var constraintsKey: UInt8 = 0

/Users/jeongkyunkim/Documents/workspace/watsup/watsup-ios/Pods/SnapKit/Source/UILayoutSupport+Extensions.swift:
    1|       |//
    2|       |//  SnapKit
    3|       |//
    4|       |//  Copyright (c) 2011-Present SnapKit Team - https://github.com/SnapKit
    5|       |//
    6|       |//  Permission is hereby granted, free of charge, to any person obtaining a copy
    7|       |//  of this software and associated documentation files (the "Software"), to deal
    8|       |//  in the Software without restriction, including without limitation the rights
    9|       |//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   10|       |//  copies of the Software, and to permit persons to whom the Software is
   11|       |//  furnished to do so, subject to the following conditions:
   12|       |//
   13|       |//  The above copyright notice and this permission notice shall be included in
   14|       |//  all copies or substantial portions of the Software.
   15|       |//
   16|       |//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   17|       |//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   18|       |//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   19|       |//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   20|       |//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   21|       |//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   22|       |//  THE SOFTWARE.
   23|       |
   24|       |#if os(iOS) || os(tvOS)
   25|       |    import UIKit
   26|       |#endif
   27|       |
   28|       |    
   29|       |@available(iOS 8.0, *)
   30|       |public extension ConstraintLayoutSupport {
   31|       |    
   32|      0|    var snp: ConstraintLayoutSupportDSL {
   33|      0|        return ConstraintLayoutSupportDSL(support: self)
   34|      0|    }
   35|       |    
   36|       |}

